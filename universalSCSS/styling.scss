@import "0-variables/variables-dir", "1-custom/custom-dir";

$footerheight: 75px;

:root {
  overflow-x: hidden;
}

body {
  display: flex;
  flex-direction: column;

}

// For Font Awesome
i.fa, i.fab
{
  color: $white;
  background-color: transparent;

  @include padding(0, 0, 0, 10px);

  a:link
  {
    text-decoration: none;
    color: inherit;
  }

}

////////////////////////////////////////////////////////////////////////////

// ... what is this for again?
.media {
  border: 1px solid $headerBGColor;

  @include padding(10px, 10px, 10px, 10px);
  @include margin(5px, null, 5px, null);

  // Focussed on Icons ... Don't see there being other graphics in this spot
  img {
    width: 42px;
    height: 42px;
  }
}

.smallText {
  font-size: 11px;
}

.coverImage {
  display: block;

  min-height: 40vh;

  background-image: url("/graphics/herobg/01540_driftwood_1280x720.jpg");
  background-position: top;
  background-size: cover;
}



// main text div only on the frontpage
#mainText {
  text-align: justify;

  background-color: $white;

  @include padding(1%, 2%, 0, 2%);

}

// Nav: for the entire header
nav
{
  flex-grow: 0;

  color: $white;
  background-color: $headerBGColor;
  width: 100%;
  font-weight: bold;

  // This is for the navigation menus on the right, when at full screen
  .navbar-nav a:link {
    font-size: 22px;
  }
}

// Header Main text is not changing so I am trying this class OUTSIDE of the other nav css, above

// This is for the Text "header" on the left, when at full screen
nav.navbar-brand {
  font-size: 36px;

  // really shouldn't have any major padding effect other than pushing the menus over from the far left
  // The main padding for nav seems to be handled by boostrap's CSS and I do not have to touch it
  @include padding(0, 0, 0, 10px);
}

footer {
   /*
   position: absolute;
   bottom: 0;
   */
   position: relative;
   @include margin(1%, 0, 0, 0);
   @include padding(2%, 0, 0, 0);


   // this has nothing to do with the main layout's flex
   display: flex;
   flex-direction: row;
   flex-grow: 0;

   width: 100%;

   color: $white;
   background-color: $headerBGColor;

   a:link {
     color: inherit;
     background-color: inherit;
   }


}

#mainBody
{
  flex-grow: 1;

  color: $headerBGColor;
  background-color: $white;

  @include padding(1%, 2%, 0, 15px);

}

#StartPageStyle
{
  display: flex;
  justify-content: center;

}

.iconSM
{
  width: 32px;
  height: 32px;
}

.iconLG
{
  width: 48px;
  height: 48px;
}


/////////////////////////////////////////
// RSS feed related - Post RSSDOG way
// RSSDog wasn't bad ... it had good styling but that was all in the RSS link itself ...
// this new way is more vanilla and it gives me SUPER fine-grain control over the CSS


// Labeling it like this to keep it straight from other RSS tags that may be in the RSS to HTML script
.xmetalRSS
{
  border: 1px solid $black;
  width: 75%;

  .xmetalRSSHeader
  {
    background-color: #333333;
    color: $white;
    font-weight: bold;
    @include padding(1%, 1%, 1%, 1%);
  }

}


// Main title
h3.feed-title
{
  color: $white;
  background-color: #333333;

  @include padding(1%, 0, 1%, 1%);
}

h4.feed-item-title
{

  a:link, a:hover, a:visited
  {
    background-color: inherit;
    color: #333333;
    font-size: 15px;
    @include padding(1%,0,0,1%);

  }

}
