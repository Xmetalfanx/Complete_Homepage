@use '../intial/index';

*,
body {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  width: 100%;
}

body {
  color: var(--darkGrey2);
  display: grid;
  font-family: var(--Roboto);
  font-size: 1.05rem;
  font-weight: 400;
  grid-template-areas:
    'header header'
    'main-section main-section'
    'footer footer';
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: 1fr auto 1fr;
  line-height: 1.5;
  min-height: 100%;
  text-align: left;

  h1,
  h2,
  h3,
  h4,
  h5 {
    color: var(--themeBGColorAccent);
    font-weight: 800;
  }
}

header,
footer {
  display: flex;

  color: var(--white);
  background-color: var(--themeBGColorMain);


  font-weight: 900;

  // Aligns horizontally .. the left item all the way to the left, and the right div item
  // (in a two div layout inside) all the way to the right
  justify-content: space-between;

  // aligns content top vs bottom on the Y axis
  align-items: center;

  max-height: 4.5rem;

  a {
    color: inherit;
    text-decoration: none;
  }

  a:hover {
    outline: 1px dotted var(--white);
    text-decoration: none;
  }
}

footer {
  padding: 1.5rem;
  grid-area: footer;

  // I could slap other classes on each img tag, or do this ... sort of redundant CSS but it removes the need for extra css tags in the html
  img {
    max-width: 32px;
    max-height: 32px;
    margin: 0.4rem;
  }

  .contacts, .site-made {
    width: 50%;
  }

  .contacts {
    text-align: right;
  }

}

/*********** Main Section in middle of page  *****/

// the main section between the nav top bar and the footer
.main-section {
  grid-area: main-section;
  padding: 1.5rem;
  display: grid;

  grid-gap: 1.5rem;
  justify-items: stretch;

  // this is a link color ON a whiteBG
  a {
    color: var(--midnightBlue);
    background-color: transparent;
    text-decoration: none;
  }

  &--left-wide {
    grid-template-columns: auto 18%;
    grid-template-areas: 'pContent sidebar';
  }

  &--right-wide {
    grid-template-columns: 18% auto;
    grid-template-areas: 'sidebar pContent';
  }

  // This even make sense? ... with no "sidebar?"   maybe yes if i dont do grid-template-areas: in the parent class;
  &--wide {
    grid-template-columns: 1fr;
    grid-template-areas: 'pContent';
  }

  /************** Cards in mainSection specifically *************/
  .card {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    margin: 0 auto 1.2rem auto;

    min-width: 8rem;

    &--bordered {
      border: 1px solid var(--themeBGColorMain);
    }

    .card__body,
    .card__text {
      padding: 1rem;
    }

    .card__header {
      border-color: var(--themeBGColorMain);
      background-color: var(--themeBGColorMain);
      color: white;
      display: flex;
      flex-direction: row;
      font-weight: bold;
      font-size: 1.1rem;
      justify-content: flex-start;
      padding: 1rem;

      a:link,
      a:visited {
        background-color: inherit;
        color: var(--white);
        text-decoration: none;
      }

      &--wide {
        justify-content: space-between
      }

      // Dark BG for header, and light text
      &--dark-bg {

        // not a fan of this var name but i dont want name collosion with "card-title" which is the var i rather use
        .card-name,
        .addon-title {
          font-size: 20px;
          font-weight: 700;
        }
      }
    }
  }

  /****** Sidebar *****/
  .sidebar {
    img {
      display: block;
      margin: 1rem 0;
      padding: 0;
    }

    /** cards in Sidebar, specifically ... i think any mainSection global .card stuff carries over ***/
    .card {
      //width: 85%;

      .card__header {
        padding: 0.5rem 1rem;
      }

      .card__body {
        line-height: 1.4rem;

        // removes the need for so many <br /> tags
        a,
        span {
          margin: 0.4rem auto;
        }
      }
    }
  }

  // the main sections of each side of the site
  .primary-content {
    grid-area: pContent;

    // the idea is for readability
    p {
      margin: 1rem auto;
      max-width: 72ch;
    }
  }
}

/* Media query for center section under 794px wide */
@media all and (max-width: 794px) {
  // the main section between the nav top bar and the footer
  .main-section,
  .main-section--left-wide,
  .main-section--right-wide {
    .sidebar {
      grid-area: sidebar;

      .card {
        margin-left: auto;
        margin-right: auto;
        width: 100%;

        .card__body {
          a {
            display: inline-block;
          }
        }
      }
    }

    // the main sections of each side of the site
    .primary-content {
      grid-area: pContent;
      margin: 0 1rem;
    }
  }

  .main-section {
    grid-template-areas:
      'sidebar'
      'pContent';

    grid-template-columns: 1fr;
  }
}


/////////////////////////////////////////////////////////////////////
// so the footer spans across the entire botton, with the .site-made div being hidden now
@media all and (max-width: 993px) {
  .contacts {
    width: 100% !important;
  }

  .site-made {
    display: none;
  }

}


header {
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
  padding: 1rem;
  text-shadow: 2px 5px var(--themeBGColorMain);
  grid-area: header;

  // the right side part with the actual section links
  nav.topnav {
    // MAY be needed for mobile layout
    //display: flex;
    //flex-direction: row;
    //justify-self: end;

    a {
      padding: 1rem;
      font-size: 22px;
      font-weight: 500;
    }

    // for hamburger menu that should only display on mobile
    .icon {
      display: none;
    }
  }

  // graphic to left of frontpage-title
  .nav-icon {
    font-size: 2rem;
    color: var(--white);
    background-color: var(--themeBGColorMain);

  }
}

/************** Responsive CSS *******/

/* When the screen is less than 600 pixels wide, hide all links. Show the link that contains should open and close the topnav (.icon) */
@media screen and (max-width: 794px) {
  header {
    nav.topnav {
      a {
        display: none;
      }

      .icon {
        float: right;
        display: block;
      }
    }
  }
}

/* The "responsive" class is added to the topnav with JavaScript when the user clicks on the icon. This class makes the topnav look good on small screens (display the links vertically instead of horizontally) */
@media screen and (max-width: 794px) {
  header {
    nav.topnav.responsive {
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: 10;
      left: 0;
      top: 0;
      background: #333;
      display: grid;
      text-align: center;
      justify-content: center;

      a {
        display: block;
        text-align: left;
        align-self: center;
      }

      .icon {
        position: absolute;
        right: 0;
        display: block;
        // idea: move menu icon over the menu in responsive mode
        z-index: 1;
        margin: 17px 35px 0 0;
        outline: inherit;
        align-self: start;
      }
    }
  } // ends header
} // ends media query
